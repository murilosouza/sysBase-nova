version: "3.8"

services:
  app:
    build:
      context: ./
      dockerfile: docker-environment/php/Dockerfile
    container_name: w3sys-app
    restart: always
    working_dir: /var/www/application
    volumes:
      - ./:/var/www
      - ./application:/var/www/application
    environment:
      - COMPOSER_HOME=/composer
      - COMPOSER_ALLOW_SUPERUSER=1
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
      - redis
    networks:
      - w3sys-net

  nginx:
    image: nginx:1.25.1-alpine-slim
    container_name: w3sys-nginx
    restart: always
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker-environment/nginx:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - w3sys-net

  redis:
    image: redis:6-alpine
    container_name: w3sys-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - w3sys-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:14-alpine
    container_name: w3sys-db
    restart: always
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - w3sys-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  redis:
  db:

networks:
  w3sys-net:
    driver: bridge